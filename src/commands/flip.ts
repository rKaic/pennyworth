import { Command, CommandModule, ServiceCollection } from "../Types";

const flippedChars = {
  // uppercase (incomplete)
  'A':'‚àÄ',
  'B':'êêí',
  'C':'∆Ü',
  'E':'∆é',
  'F':'‚Ñ≤',
  'G':'◊§',
  'H':'H',
  'I':'I',
  'J':'≈ø',
  'L':'À•',
  'M':'W',
  'N':'N',
  'P':'‘Ä',
  'R':'·¥ö',
  'T':'‚ä•',
  'U':'‚à©',
  'V':'Œõ',
  'Y':'‚ÖÑ',

  // lowercase
  'a':'…ê',
  'b':'q',
  'c':'…î',
  'd':'p',
  'e':'«ù',
  'f':'…ü',
  'g':'∆É',
  'h':'…•',
  'i':'·¥â',
  'j':'…æ',
  'k':' û',
  'm':'…Ø',
  'n':'u',
  'p':'d',
  'q':'b',
  'r':'…π',
  't':' á',
  'u':'n',
  'v':' å',
  'w':' ç',
  'y':' é',

  // numbers
  '1':'∆ñ',
  '2':'·ÑÖ',
  '3':'∆ê',
  '4':'„Ñ£',
  '5':'œõ',
  '6':'9',
  '7':'„Ñ•',
  '8':'8',
  '9':'6',
  '0':'0',

  // special chars
  '.':'Àô',
  ',':'\'',
  '\'':',',
  '"':',,',
  '`':',',
  '<':'>',
  '>':'<',
  '‚à¥':'‚àµ',
  '&':'‚Öã',
  '_':'‚Äæ',
  '?':'¬ø',
  '!':'¬°',
  '[':']',
  ']':'[',
  '(':')',
  ')':'(',
  '{':'}',
  '}':'{'
};

export default (services: ServiceCollection): CommandModule[] => {
  const modules: CommandModule[] = [{
    key: "flip",
    aliases: [],
    execute: async (command: Command) => {
      var text = command.params.join(" ");
      let flippedText: string[] = [];
      for(let i = 0; i < text.length; i++) {
        let flippedChar = flippedChars.hasOwnProperty(text[i]) ? flippedChars[text[i]] : text[i];
        flippedText.unshift(flippedChar);
      }
      await command.respond(`(‚ïØ¬∞‚ñ°¬∞Ôºâ‚ïØÔ∏µ ${flippedText.join("")}`);
    },
    help: {
      description: "Flips the inputted text upside-down",
      displayAsCommand: true,
      usage: "<phrase>"
    }
  }];

  return modules;
}